library(lubridate)
mmwr_to_date <- function(mmwr_year, mmwr_week) {
first_day <- floor_date(make_date(mmwr_year, 1, 4) , unit = "week")
date <- first_day + weeks(mmwr_week - 1)
return(date)
}
x <- today()
epiweek(x)
epiyear(x)
mmwr_to_date(2023, 38)
library(ggplot)
library(ggplot2)
avg |> ggplot(aes(year, rate)) + geom_line()
library(dslabs)
view(us_contagious_diseases)
library(dslabs)
view(us_contagious_diseases)
avg <- us_contagious_diseases |>
filter(weeks_reporting>0) |>
filter(disease=="Measles" & !state %in% c("Hawaii","Alaska")) |>
group_by(year) |>
summarize(rate = sum(count*52/weeks_reporting)/sum(population)*10^4, .groups="drop")
library(dslabs)
library(dplyr)
View(us_contagious_diseases)
avg <- us_contagious_diseases |>
filter(weeks_reporting>0) |>
filter(disease=="Measles" & !state %in% c("Hawaii","Alaska")) |>
group_by(year) |>
summarize(rate = sum(count*52/weeks_reporting)/sum(population)*10^4, .groups="drop")
library(ggplot2)
avg |> ggplot(aes(year, rate)) + geom_line() + geom_vline(xintercept=1963, color="blue") + ggtitle("Measles Rates in the U.S.") +
xlab("Year") + ylab("Cases per 10,000")
us_contagious_diseases |>
mutate(rate=count*52/weeks_reporting/population*10^4) |>
filter(weeks_reporting>0) |>
filter(disease=="Measles" & !state %in% c("Hawaii","Alaska") & weeks_reporting>0)  |>
ggplot(aes(x=year)) + geom_line(aes(y=rate, group=state), color="grey",alpha=0.5) + geom_line(data=avg, aes(x=year, y=rate)) +
scale_y_continuous(trans="sqrt") + geom_vline(xintercept=1963, color="blue") +
ggtitle("Measles Rates in U.S. States") + ylab("Square Root of Cases per 10,000") + xlab("Year")
library(RColorBrewer)
colors<-brewer.pal(9, "BuGn")
us_contagious_diseases |>
filter(weeks_reporting>0) |>
filter(disease=="Measles" & !state %in% c("Hawaii","Alaska") & weeks_reporting>0)  |>
mutate(rate=sqrt(count*52/weeks_reporting/population*10^4)) |>
group_by(state) |>
mutate(peak=max(rate, na.rm=TRUE))|> #square root transformation
arrange(desc(peak)) |>
ungroup() |>
ggplot(aes(year, y=reorder(state, peak), fill=rate)) + geom_tile(color="grey") + scale_fill_gradientn(colors=colors) +
xlab("Year") + ylab("Square Root of Cases per 10,000") + ggtitle("Measles Rates in U.S. States")
library(readr)
url <- "https://raw.githubusercontent.com/datasciencelabs/2023/main/data/covid19-data.csv"
dat <- read_csv(url)
library(readr)
url <- "https://raw.githubusercontent.com/datasciencelabs/2023/main/data/covid19-data.csv"
dat <- read_csv(url)
dat$region <- factor(dat$region)
library(lubridate)
mmwr_to_date <- function(mmwr_year, mmwr_week) {
first_day <- floor_date(make_date(mmwr_year, 1, 4) , unit = "week")
date <- first_day + weeks(mmwr_week - 1)
return(date)
}
x <- today()
epiweek(x)
epiyear(x)
mmwr_to_date(2023, 38)
dat <- dat |> mutate(start_date = mmwr_to_date(mmwr_year, mmwr_week), end_date=start_date + days(6))
dat |>
arrange(end_date) |>
group_by(state) |>
mutate(tests=diff(c(0, tests))) |>
ggplot(aes(end_date, tests)) + geom_line() +
facet_wrap(~state, scales="free_y") + ggtitle("COVID Case Rate in the U.S.") + xlab("Date") + ylab("Cases per 100,000 per week")
dat |>  group_by(end_date) |>
summarize(rate = sum(cases)/sum(population)*10^4, .groups="drop") |>
ggplot(aes(x=end_date, y=rate)) + geom_line(data=dat, aes(x=end_date, y=cases/population*10^4, group=state, color=region, alpha=0.5)) + geom_line(aes(x=end_date, y=rate))  + geom_vline(aes(xintercept=as.Date("2020-12-15")), linetype=2) + ggtitle("COVID Case Rate in the U.S.") + xlab("Date") + ylab("Cases per 100,000 per week")
dat |>
arrange(end_date) |>
filter(state %in% c("WY", "SD","DC","AK","NV")) |>
group_by(state) |>
ggplot(aes(end_date, tests)) + geom_line() +
facet_wrap(~state, scales="free_y")
dat |>
arrange(end_date) |>
filter(state %in% c("WY", "SD","DC","AK","NV")) |>
group_by(state) |>
ggplot(aes(end_date, tests)) + geom_line()
date <- max((dat |> filter(!is.na(tests)))$end_date)
print(format(date, "%B %d, %Y"))
dat |>
arrange(end_date) |>
filter(state %in% c("WY", "SD","DC","AK","NV")) |>
group_by(state) |>
ggplot(aes(end_date, tests)) + geom_line() +
facet_wrap(~state, scales="free_y")
dat |>
arrange(end_date) |>
filter(state %in% c("WY", "SD","DC","AK","NV"))
dat |>
arrange(end_date)
dat
dat
dat
dat
dat |>
arrange(end_date) |>
filter(state %in% c("WY", "SD","DC","AK","NV")) |>
group_by(state) |>
ggplot(aes(end_date, tests)) + geom_line() +
facet_wrap(~state, scales="free_y")
lastdate <- max((dat |> filter(!is.na(tests)))$end_date)
print(format(lastdate, "%B %d, %Y"))
dat |> filter(end_date==lastdate) |>
mutate(tpc = tests/population) |>
ggplot(aes(region, tpc)) + geom_boxplot() + geom_text(aes(label=state)) +
ggtitle("COVID Tests Per Capita on December 18, 2021") + xlab("Region") + ylab("Tests Per Capita")
dat |> filter(!is.na(tests))
url2 <- "https://raw.githubusercontent.com/datasciencelabs/2023/main/data/covid19-tests.txt"
tests <- read_delim(url2, delim=" ")
tests <- tests |> mutate(date=mdy(date), tests=parse_number(tests))
tests
tests |> ggplot(aes(x=date, y=tests)) + geom_line()
tests |> ggplot(aes(x=date, y=tests)) + geom_line() + ggtitle("Covid Tests over Time") + xlab("Date") + ylab("Tests")
dat |>
arrange(end_date) |>
group_by(state) |>
mutate(tests=diff(c(0, tests))) |>
ggplot(aes(end_date, tests)) + geom_line() +
facet_wrap(~state, scales="free_y") + ggtitle("COVID Case Tests by State") + xlab("Date") + ylab("Cases per 100,000 per week")
head(dat)
dat |> ggplot(aes(x=end_date, y=deaths_underlying_cause)) + geom_line() + ggtitle("Deaths over Time") + xlab("Date") + ylab("Deaths")
head(dat)
dat |>  group_by(end_date) |>
summarize(rate = sum(deaths_underlying_cause)/sum(population)*10^4, .groups="drop") |>
ggplot(aes(x=end_date, y=rate)) + geom_line(data=dat, aes(x=end_date, y=deaths_underlying_cause/population*10^4, group=state, color=region, alpha=0.5)) + geom_line(aes(x=end_date, y=rate))  + geom_vline(aes(xintercept=as.Date("2020-12-15")), linetype=2) + ggtitle("COVID Case Rate in the U.S.") + xlab("Week End Date") + ylab("Cases per 100,000 per week")
dat |>  group_by(end_date) |>
summarize(rate = sum(cases)/sum(population)*10^4, .groups="drop") |>
ggplot(aes(x=end_date, y=rate)) + geom_line(data=dat, aes(x=end_date, y=cases/population*10^4, group=state, color=region, alpha=0.5)) + geom_line(aes(x=end_date, y=rate))  + geom_vline(aes(xintercept=as.Date("2020-12-15")), linetype=2) + ggtitle("COVID Case Rate in the U.S.") + xlab("Week End Date") + ylab("Cases per 100,000 per week")
dat |>  group_by(end_date) |>
summarize(rate = sum(cases)/sum(population)*10^4, .groups="drop") |>
ggplot(aes(x=end_date, y=rate)) + geom_line(data=dat, aes(x=end_date, y=cases/population*10^4, group=state, color=region, alpha=0.5))
dat |>  group_by(end_date) |>
summarize(rate = sum(deaths_underlying_cause)/sum(population)*10^4, .groups="drop") |>
ggplot(aes(x=end_date, y=rate)) + geom_line(data=dat, aes(x=end_date, y=deaths_underlying_cause/population*10^4, group=state, color=region, alpha=0.5))
dat |>  group_by(end_date) |>
summarize(rate = sum(deaths_underlying_cause)/sum(population)*10^4, .groups="drop") |>
ggplot(aes(x=end_date, y=rate)) + geom_line(data=dat, aes(x=end_date, y=deaths_underlying_cause/population*10^4, group=state, color=region, alpha=0.5)) + geom_line(aes(x=end_date, y=rate))
dat |>  group_by(end_date) |>
summarize(rate = sum(deaths_underlying_cause)/sum(population), .groups="drop") |>
ggplot(aes(x=end_date, y=rate)) + geom_line(data=dat, aes(x=end_date, y=deaths_underlying_cause/population, group=state, color=region, alpha=0.5)) + geom_line(aes(x=end_date, y=rate))  + geom_vline(aes(xintercept=as.Date("2020-12-15")), linetype=2) + ggtitle("COVID Case Rate in the U.S.") + xlab("Week End Date") + ylab("Cases per 100,000 per week")
dat |>  group_by(end_date) |>
summarize(rate = sum(cases)/sum(population)*10^4, .groups="drop") |>
ggplot(aes(x=end_date, y=rate)) + geom_line(data=dat, aes(x=end_date, y=cases/population*10^4, group=state, color=region)) + geom_line(aes(x=end_date, y=rate))  + geom_vline(aes(xintercept=as.Date("2020-12-15")), linetype=2) + ggtitle("COVID Case Rate in the U.S.") + xlab("Week End Date") + ylab("Cases per 100,000 per week")
dat |>  group_by(end_date) |>
summarize(rate = sum(cases)/sum(population)*10^4, .groups="drop") |>
ggplot(aes(x=end_date, y=rate)) + geom_line(data=dat, aes(x=end_date, y=cases/population*10^4, group=state, color=region, alpha=0.5)) + geom_line(aes(x=end_date, y=rate))  + geom_vline(aes(xintercept=as.Date("2020-12-15")), linetype=2) + ggtitle("COVID Case Rate in the U.S.") + xlab("Week End Date") + ylab("Cases per 100,000 per week")
dat |>  group_by(end_date) |>
summarize(rate = sum(cases)/sum(population)*10^4, .groups="drop") |>
ggplot(aes(x=end_date, y=rate)) + geom_line(data=dat, aes(x=end_date, y=cases/population*10^4, group=state, color=region), alpha=0.5) + geom_line(aes(x=end_date, y=rate))  + geom_vline(aes(xintercept=as.Date("2020-12-15")), linetype=2) + ggtitle("COVID Case Rate in the U.S.") + xlab("Week End Date") + ylab("Cases per 100,000 per week")
dat |>  group_by(end_date) |>
summarize(rate = sum(deaths_underlying_cause)/sum(population), .groups="drop") |>
ggplot(aes(x=end_date, y=rate)) + geom_line(data=dat, aes(x=end_date, y=deaths_underlying_cause/population, group=state, color=region), alpha=0.5) + geom_line(aes(x=end_date, y=rate))  + geom_vline(aes(xintercept=as.Date("2020-12-15")), linetype=2) + ggtitle("COVID Death Rate in the U.S.") + xlab("Week End Date") + ylab("Deaths per week")
#| eval: false
tmp <- dat |>
pivot_longer(c(series_complete, booster, bivalent), names_to = "series", values_to = "percent") |>
select(state, region, population, end_date, series, percent) |>
filter(!is.na(percent)) |>
mutate(percent = percent/population,
series = factor(series, c("series_complete", "booster", "bivalent")))
#| eval: false
tmp <- dat |>
pivot_longer(c(series_complete, booster, bivalent), names_to = "series", values_to = "percent") |>
select(state, region, population, end_date, series, percent) |>
filter(!is.na(percent)) |>
mutate(percent = percent/population,
series = factor(series, c("series_complete", "booster", "bivalent")))
library(tidyverse)
#| eval: false
tmp <- dat |>
pivot_longer(c(series_complete, booster, bivalent), names_to = "series", values_to = "percent") |>
select(state, region, population, end_date, series, percent) |>
filter(!is.na(percent)) |>
mutate(percent = percent/population,
series = factor(series, c("series_complete", "booster", "bivalent")))
tmp
p1 <- tmp |> filter(series=="series_complete") |> ggplot(aes(x=end_date, y=percent)) + geom_line
p1 <- tmp |> filter(series=="series_complete") |> ggplot(aes(x=end_date, y=percent)) + geom_line()
p1
p1 <- tmp |> filter(series=="series_complete") |> ggplot(aes(x=end_date, y=percent, group=state, color=region)) + geom_line()
p1
grid.arrange(p1, p2, p3, ncol=1)
library(gridExtra)
p1 <- tmp |> filter(series=="series_complete") |> ggplot(aes(x=end_date, y=percent, group=state, color=region)) + geom_line()
p2 <- tmp |> filter(series=="booster") |> ggplot(aes(x=end_date, y=percent, group=state, color=region)) + geom_line()
p3 <- tmp |> filter(series=="bivalent") |> ggplot(aes(x=end_date, y=percent, group=state, color=region)) + geom_line()
grid.arrange(p1, p2, p3, ncol=1)
p1 <- tmp |> filter(series=="series_complete") |> ggplot(aes(x=end_date, y=percent, group=state, color=region, scales::percent)) + geom_line()
lp1
p1
p1 <- tmp |> filter(series=="series_complete") |> ggplot(aes(x=end_date, y=percent, group=state, color=region), scales::percent) + geom_line()
p1
p1 <- tmp |> filter(series=="series_complete") |> ggplot(aes(x=end_date, y=percent, group=state, color=region)) + geom_line(scales::percent)
p1 <- tmp |> filter(series=="series_complete") |> ggplot(aes(x=end_date, y=percent, group=state, color=region)) + geom_line(aes(scales::percent))
p1
p1 <- tmp |> filter(series=="series_complete") |> ggplot(aes(x=end_date, y=percent, group=state, color=region)) + geom_line()
p1
p1 <- tmp |> filter(series=="series_complete") |> ggplot(aes(x=end_date, y=scales::percent, group=state, color=region)) + geom_line()
p1
p1 <- tmp |> filter(series=="series_complete") |> ggplot(aes(x=end_date, group=state, color=region)) + geom_line() + scale_y_continuous(labels=scales::percent)
p1
p1 <- tmp |> filter(series=="series_complete") |> ggplot(aes(x=end_date, y=percent, group=state, color=region)) + geom_line() + scale_y_continuous(labels=scales::percent)
p1
p1 <- tmp |> filter(series=="series_complete") |> ggplot(aes(x=end_date, y=percent, group=state, color=region)) + geom_line() + scale_y_continuous(labels=scales::percent)
p2 <- tmp |> filter(series=="booster") |> ggplot(aes(x=end_date, y=percent, group=state, color=region)) + geom_line()+ scale_y_continuous(labels=scales::percent)
p3 <- tmp |> filter(series=="bivalent") |> ggplot(aes(x=end_date, y=percent, group=state, color=region)) + geom_line()+ scale_y_continuous(labels=scales::percent)
grid.arrange(p1, p2, p3, ncol=1)
library(gridExtra)
p1 <- tmp |> filter(series=="series_complete") |> ggplot(aes(x=end_date, y=percent, group=state, color=region)) + geom_line() + scale_y_continuous(labels=scales::percent)
p2 <- tmp |> filter(series=="booster") |> ggplot(aes(x=end_date, y=percent, group=state, color=region)) + geom_line()+ scale_y_continuous(labels=scales::percent)
p3 <- tmp |> filter(series=="bivalent") |> ggplot(aes(x=end_date, y=percent, group=state, color=region)) + geom_line()+ scale_y_continuous(labels=scales::percent)
grid.arrange(p1, p2, p3, ncol=1)
p2 <- tmp |> filter(series=="booster") |> ggplot(aes(x=end_date, y=percent, group=state, color=region), show.legend=FALSE) + geom_line()+ scale_y_continuous(labels=scales::percent)
p2
p2 <- tmp |> filter(series=="booster") |> ggplot(aes(x=end_date, y=percent, group=state, color=region)) + geom_line(show.legend=FALSE)+ scale_y_continuous(labels=scales::percent)
p2
p1 <- tmp |> filter(series=="series_complete") |> ggplot(aes(x=end_date, y=percent, group=state, color=region)) + geom_line(show.legend=FALSE) + scale_y_continuous(labels=scales::percent)
library(gridExtra)
p1 <- tmp |> filter(series=="series_complete") |> ggplot(aes(x=end_date, y=percent, group=state, color=region)) + geom_line(show.legend=FALSE) + scale_y_continuous(labels=scales::percent)
p2 <- tmp |> filter(series=="booster") |> ggplot(aes(x=end_date, y=percent, group=state, color=region)) + geom_line(show.legend=FALSE)+ scale_y_continuous(labels=scales::percent)
p3 <- tmp |> filter(series=="bivalent") |> ggplot(aes(x=end_date, y=percent, group=state, color=region)) + geom_line()+ scale_y_continuous(labels=scales::percent)
grid.arrange(p1, p2, p3, ncol=1)
library(gridExtra)
p1 <- tmp |> filter(series=="series_complete") |> ggplot(aes(x=end_date, y=percent, group=state, color=region)) + geom_line() + scale_y_continuous(labels=scales::percent)
p2 <- tmp |> filter(series=="booster") |> ggplot(aes(x=end_date, y=percent, group=state, color=region)) + geom_line()+ scale_y_continuous(labels=scales::percent)
p3 <- tmp |> filter(series=="bivalent") |> ggplot(aes(x=end_date, y=percent, group=state, color=region)) + geom_line()+ scale_y_continuous(labels=scales::percent)
grid.arrange(p1, p2, p3, ncol=1)
head(tmp)
